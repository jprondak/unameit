#! /bin/bash
# $Id: $
#
# Copyright (c) 1997 Enterprise Systems Management Corp.
#
# This file is part of UName*It.
#
# UName*It is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2, or (at your option) any later
# version.
#
# UName*It is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with UName*It; see the file COPYING.  If not, write to the Free
# Software Foundation, 59 Temple Place - Suite 330, Boston, MA
# 02111-1307, USA.
#

# This routine takes the UName*It directory given as an argument and makes
# a release of that software in /opt/cd. The "version" file and "parts_list"
# file is consulted for how to construct the distribution. Also, this script
# must be executed once for each operating system on each different machine.
# Options:
#  -r		Make real release. That is, the directory /opt/cd/<version>
#		will be created. Normally /opt/cd/<username> will be created
#		to keep from clobbering the real release.
# -l		Leave the log files around. Useful for debugging.

PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/etc:/usr/ccs/bin:/usr/ucb:/opt/gnu/bin

owner=root
group=bin

die() {
    echo $1 1>&2
    exit 1
}

usage() {
    die "Usage: $0 [-r] [-l] UName*It_install_dir"
}

copy_hier () {
    if [ $# -eq 3 ]; then
	cmd="echo $(cat $3) | tr ' ' '\012' | cpio -pdm $2"
    else
        cmd="find . -print | cpio -pdm $2"
    fi
    # The *.txt files contain wildcards so we need to use the shell to expand
    # them. Unfortunately, GNU tar doesn't expand wildcards when using the
    # --files-from option.
    if (cd $1; eval $cmd) 2> /tmp/errs; then
	[ $leave_logs -eq 0 ] && rm /tmp/errs
    else
	cat /tmp/errs 1>&2
	[ $leave_logs -eq 0 ] && rm /tmp/errs
	exit 1
    fi
}

create_package() {
    local package_name source_dir use_version copyright_file s pkgproto demo

    package_name=$1
    demo=$2
    source_dir=$3
    use_version=$4
    copyright_file=$5
    proto_args=$6

    cp /opt/cd/copyright/$copyright_file /tmp/copyright
    cp /opt/cd/pkginfo/pkginfo.$package_name /tmp/pkginfo
    ## The Solaris 2.4 pkgproto is broken. First, it doesn't create hard
    ## links correctly. Second, it doesn't output a symbolic link if the
    ## file the symbolic link references doesn't exist. To get around this,
    ## use the pkgproto off 2.5 if we are on a 2.4 machine.
    ## Also, pkgproto bitches about the lbin/exe/* links not pointing to 
    ## valid paths. Send these warnings to /dev/null.
    case $os_dir in
        SunOS.5.4*)
	    rcp disneyland:/bin/pkgproto /tmp
	    pkgproto=/tmp/pkgproto
	    ;;
	*)
	    pkgproto=/bin/pkgproto
	    ;;
    esac
    (cd $source_dir;$pkgproto $proto_args) > /tmp/prototype 2>/dev/null
    cat >> /tmp/prototype <<EOF
i pkginfo
i copyright
EOF
    ## If SUNW_ICON is defined, add the UName*It icon.
    ## This shows the UName*It icon in swmtool.
    if [ -r /opt/cd/icons/$package_name.icon ]; then
	cp /opt/cd/icons/$package_name.icon /tmp
	echo "i $package_name.icon" >> /tmp/prototype
    fi
    ## Check for installation scripts
    for s in preinstall request postinstall; do
        if [ -r /opt/cd/scripts/$s.$package_name$demo ]; then
	    cp /opt/cd/scripts/$s.$package_name$demo /tmp/$s
	    echo "i $s" >> /tmp/prototype
        fi
    done
    if [ -r /opt/cd/depend/depend.$package_name$demo ]; then
	echo 'i depend' >> /tmp/prototype
	sed -e "s,%version%,$version," \
	    /opt/cd/depend/depend.$package_name$demo > /tmp/depend
    fi

    (cd $cd_dir$demo/$os_dir;pkgmk -b $source_dir -d $(pwd) \
	-f /tmp/prototype -v $use_version) > /dev/null 2>&1
    [ $? -ne 0 ] && die "Creating package $package_name failed"

    [ $leave_logs -eq 0 ] && \
    	rm -f /tmp/{depend,copyright,pkginfo,prototype,preinstall} \
	    /tmp/{request,postinstall,$package_name.icon,pkgproto}
}

get_package_size() {
    local package
    package=$1
    echo $(($(du -sk $cd_dir/$os_dir/$package/reloc | awk ' {print $1}')*1024))
}

trash_non_demo_files() {
    rm -rf $client_dir/install/k* $client_dir/install/unameit.conf \
        $client_dir/install/unameit_root.conf \
	$client_dir/install/unameit_setup $client_dir/install/*kerberos5* \
	$client_dir/lbin/exe/k* $client_dir/lib/nis \
	$client_dir/lib/unameit/u* $client_dir/lib/unameit/ndbm* \
	$client_dir/lsbin
    rm -rf $server_dir/lib/boot/data.0.0.1.tar.Z \
	$server_dir/lib/boot/upgrade $server_dir/lib/load \
	$server_dir/sbin/exe/unameit_load
    rm -rf $tcl_dir/man
}

## Parse arguments
leave_logs=0
while getopts ":lr" opt; do
    case $opt in
        l)
	    # Useful for debugging
	    leave_logs=1
	    ;;
	r)
	    ## Really trash release directory based on version file.
	    real_release=1
	    ;;
	\?)
	    usage
	    ;;
    esac
done
shift $(($OPTIND-1))
[ $# -ne 1 ] && usage

unameit_dir=$1
cd $unameit_dir

## Suck in the version and parts file
version=$(cat VERSION)
[ $? -ne 0 ] && die "No VERSION file in $unameit_dir. Exiting."
. parts_list
. /opt/cd/common.sh
check_parts_integrity

os_dir=$(uname -s).$(uname -r)

## Create the directory if it doesn't exist
# Don't create the version directory with periods because Windows won't
# execute applications from a directory with multiple periods. Sigh.
if [ -n "$real_release" ]; then
    cd_dir=/opt/cd/$(echo $version | sed 's/\./_/g')
else
    cd_dir=/opt/cd/`whoami`
fi
demo_cd_dir=${cd_dir}_demo
echo -n "Trashing old contents of $cd_dir/$os_dir and $demo_cd_dir/$os_dir..."
rm -rf $cd_dir/$os_dir $demo_cd_dir/$os_dir
mkdir -p $cd_dir/$os_dir $demo_cd_dir/$os_dir
chown $owner $cd_dir{,/$os_dir} $demo_cd_dir/$os_dir
chgrp $group $cd_dir/$os_dir $demo_cd_dir/$os_dir
chmod 755 $cd_dir/$os_dir $demo_cd_dir/$os_dir
## Make the CD version directory group devel/writable so the Windows
## directory can be created on the Windows machines.
chgrp devel $cd_dir
chmod 775 $cd_dir
echo done.

echo -n 'Installing README, RELEASE and VERSION files...'
INSTALL=/opt/cd/install-sh
$INSTALL -m 644 -o $owner -g $group -c README $cd_dir
$INSTALL -m 644 -o $owner -g $group -c RELEASE $cd_dir
$INSTALL -m 644 -o $owner -g $group -c VERSION $cd_dir
$INSTALL -m 644 -o $owner -g $group -c README.demo $demo_cd_dir/$os_dir/README
echo done.

case $os_dir in
    SunOS.4* | Linux*)
        copy_dir=$cd_dir/$os_dir
	client_dir=$copy_dir/client
	tcl_dir=$client_dir/lib/tcl
	krb5_dir=$client_dir/lib/krb5
	dhcp_dir=$copy_dir/dhcp
	# We don't need to trash the contents of $tcl_dir and $krb5_dir
	# because they reside under $cd_dir/$os_dir which was trashed above.
	mkdir -p $tcl_dir $krb5_dir $dhcp_dir
	chmod 755 $copy_dir/{client{,/lib/tcl,/lib/krb5},dhcp}
	# Under SunOS 4.x, symbolic links automatically have their owners
	# changed (i.e., the -h flag under SunOS 5.x is implicit).
	chown_flags=-R
	;;
    *)
	copy_dir=/var/tmp/$version
	rm -rf $copy_dir
	client_dir=$copy_dir/client
	tcl_dir=$copy_dir/tcl
	krb5_dir=$copy_dir/krb5
	dhcp_dir=$copy_dir/dhcp
	# The permission of these directories doesn't matter because we are
	# going to make packages anyways.
	mkdir -p $client_dir $tcl_dir $krb5_dir $dhcp_dir
	chown_flags=-Rh
	;;
esac
echo -n "Copying UName*It client files to $client_dir..."

## Copy UName*It client files
cat > /tmp/client_list <<EOF
config
lbin/exe
lsbin/exe
man/man1m/upulld.1m
sbin/exe/upulld
EOF
find bin/exe install lib/{nis,toi,unameit} man/man1 -print \
	>> /tmp/client_list
copy_hier $unameit_dir $client_dir /tmp/client_list
[ $leave_logs -eq 0 ] && rm /tmp/client_list
echo done.

## Copy files from parts list.
echo -n "Copying Tcl files to $tcl_dir..."
copy_hier /opt/$tcl $tcl_dir $unameit_dir/tcl_files.txt

copy_hier /opt/share/$tcl $tcl_dir $unameit_dir/tcl_shared_files.txt
echo done.

echo -n "Copying Kerberos 5 files to $krb5_dir..."
copy_hier /opt/$krb5 $krb5_dir $unameit_dir/krb5_files.txt
echo done.

echo -n "Copying DHCP files to $dhcp_dir..."
copy_hier /opt/dhcp $dhcp_dir
if [ -d /usr/man/man1m ]; then
    dirs="man/man4 man/man1m"
else
    dirs="man/man5 man/man8"
fi
(cd /opt/share/dhcp;eval find $dirs -type f -print) > /tmp/man_files$$.txt
copy_hier /opt/share/dhcp $dhcp_dir /tmp/man_files$$.txt
rm /tmp/man_files$$.txt
echo done.

chown $chown_flags $owner $client_dir $tcl_dir $krb5_dir $dhcp_dir
chgrp $chown_flags $group $client_dir $tcl_dir $krb5_dir $dhcp_dir

case $os_dir in
    SunOS.4* | Linux*)
        ;;
    *)
        ## Copy server files
	server_dir=$copy_dir/server
        echo -n "Copying UName*It server files to $server_dir..."
        mkdir $server_dir
	cat > /tmp/server_list <<EOF
man/man1m/u[b-n]*
man/man1m/upa*
sbin/exe/u[b-n]*
sbin/exe/upa*
EOF
	find lib/{backend,boot,load} -print >> /tmp/server_list
	copy_hier $unameit_dir $server_dir /tmp/server_list
	[ $leave_logs -eq 0 ] && rm /tmp/server_list
	echo done.

	unisqlx_dir=$server_dir/lib/unisqlx
	echo -n "Copying UniSQL/X files to $unisqlx_dir..."
	mkdir $unisqlx_dir
	chmod 755 $unisqlx_dir
	## Copy unisqlx from parts list
	copy_hier /opt/$unisqlx $unisqlx_dir $unameit_dir/unisqlx_files.txt
	## Reset the hostkeys file to be a symbolic link
	ln -s /etc/unameit/unisqlx_keys $unisqlx_dir/admin/hostkeys
        echo done.
	chown $chown_flags $owner $server_dir
	chgrp $chown_flags $group $server_dir
	;;
esac

echo -n 'Making links to Tcl and Kerberos 5 executables...'
for part in tcl krb5; do
    for dir in bin sbin; do
	for file in $copy_dir/$part/$dir/*; do
	    # If the shell matches nothing, then you will get something like
	    # "/var/tmp/2.0/tcl/bin/*" and we will skip the file name in this 
	    # case.
	    # Stupid Bourne shell behavior.
	    if [ -x $file ]; then
	        shortname=${file##/*/}
	        ln -s ../../lib/$part/$dir/$shortname $client_dir/l$dir/exe
	    fi
	done
    done
done
# UniSQL/X doesn't have a bin or sbin directory that we use so nothing needs
# to be done here.
echo done.

echo -n 'Stripping binaries...'
case $os_dir in
    Linux*)
	file `find $client_dir $dhcp_dir -perm -100 -type f -print` | \
	    grep 'ELF*executable' | awk -F: ' {print $1}' | \
	    sed -e '/\.so$/d' | xargs strip 2>/dev/null
	;;
    SunOS.4*)
        ## Stripping SunOS 4.x shared binaries makes them dump core.
	file `find $client_dir $dhcp_dir -perm -100 -type f -print` | \
	    grep 'sparc.*executable' | awk -F: ' {print $1}' | \
	    sed -e '/\.so\..*$/d' -e '/\.so$/d' | xargs strip 2>/dev/null
	;;
    SunOS.5*)
	file `find $client_dir $tcl_dir $krb5_dir $server_dir $dhcp_dir \
	    -perm -100 -type f -print` | grep ELF | awk -F: ' {print $1}' \
	    | xargs strip
	;;
    HP-UX.B.10*)
	## HP/UX doesn't mind you stripping shared libraries as long as
	## you give the -r flag.
	file `find $client_dir $tcl_dir $krb5_dir $server_dir $dhcp_dir \
	    -perm -100 -type f -print` | egrep 'executable|shared' | \
	    awk -F: ' {print $1}' | xargs strip -r
	;;
esac
echo done.

case $os_dir in
    SunOS.4* | Linux*)
	## We're done!
	;;
    SunOS.5*)
	echo -n 'Packaging contents...'
	create_package ESMtcl '' $tcl_dir $tcl copyright.tcl .=lib/tcl
	create_package ESMkrb5 '' $krb5_dir $krb5 copyright.krb5 '.=$RELDIR'
	create_package ESMuclnt '' $client_dir $version copyright.unameit .
	create_package ESMusrv '' $server_dir $version copyright.unameit .
	create_package ESMdhcp '' $dhcp_dir B5.16 copyright.dhcp .
	## Trash files not needed in demo.
	trash_non_demo_files
	## Create demo packages
	create_package ESMtcl _demo $tcl_dir $tcl copyright.tcl .=lib/tcl
	create_package ESMuclnt _demo $client_dir $version copyright.unameit .
	create_package ESMusrv _demo $server_dir $version copyright.unameit .
	echo done.

	echo -n 'Adding cluster files...'
	sed -e "s,%version%,$version," -e "s,%os_version%,$os_dir," \
	    /opt/cd/cluster/cdtoc > $cd_dir/.cdtoc
	mkdir -p $cd_dir/$os_dir/locale/C
	chmod 755 $cd_dir/$os_dir/locale{,/C}
	sed -e "s,%version%,$version," /opt/cd/cluster/clustertoc > \
	    $cd_dir/$os_dir/locale/C/.clustertoc
        tcl_opt_size=$(get_package_size ESMtcl)
        krb5_opt_size=$(get_package_size ESMkrb5)
        client_opt_size=$(get_package_size ESMuclnt)
        server_opt_size=$(get_package_size ESMusrv)
	dhcp_opt_size=$(get_package_size ESMdhcp)
	sed -e "s,%version%,$version," \
	    -e "s,%tcl_version%,$tcl," \
	    -e "s,%krb5_version%,$krb5," \
	    -e "s,%dhcp_version%,B5.16," \
	    -e "s,%tcl_opt_size%,$tcl_opt_size," \
	    -e "s,%krb5_opt_size%,$krb5_opt_size," \
	    -e "s,%client_opt_size%,$client_opt_size," \
	    -e "s,%server_opt_size%,$server_opt_size," \
	    -e "s,%dhcp_opt_size%,$dhcp_opt_size," \
	    /opt/cd/cluster/packagetoc > $cd_dir/$os_dir/locale/C/.packagetoc
	cp /opt/cd/cluster/order $cd_dir/$os_dir/.order
	chmod 644 $cd_dir/$os_dir/{.order,locale/C/{.clustertoc,.packagetoc}}
	chown $chown_flags $owner $cd_dir/$os_dir/{.order,locale}
	chgrp $chown_flags $group $cd_dir/$os_dir/{.order,locale}
	echo done.
	;;
    HP-UX*)
	echo -n 'Packaging contents...'
    	sed -e "s,%version%,$version," -e "s,%tcl_version%,$tcl," \
	    -e "s,%krb5_version%,$krb5," -e "s,%dhcp_version%,B5.16," \
	    /opt/cd/psf > /tmp/psf
	cp /opt/cd/scripts/preinstall.unameit \
	    $client_dir/lib/preinstall.client
	cp /opt/cd/scripts/preinstall.unameit \
	    $server_dir/lib/preinstall.server
	cp /opt/cd/scripts/postinstall.ESMuclnt \
	    $client_dir/lib/configure.client
	cp /opt/cd/scripts/postinstall.ESMusrv \
	    $server_dir/lib/configure.server
	cp /opt/cd/scripts/unconfigure.client $client_dir/lib
	cp /opt/cd/scripts/unconfigure.server $server_dir/lib
        if swpackage -s /tmp/psf -d $cd_dir/$os_dir \
	    -x 'write_remote_files=true' -x 'create_target_acls=false' \
	    > /dev/null; then
	    [ $leave_logs -eq 0 ] && rm -f /tmp/psf $cd_dir/$os_dir/swagent.log
	else
	    echo 'Creating HP-UX packages failed' 1>&2
	    [ $leave_logs -eq 0 ] && rm -f /tmp/psf $cd_dir/$os_dir/swagent.log
	    exit 1
	fi
	trash_non_demo_files
    	sed -e "s,%version%,$version," -e "s,%tcl_version%,$tcl," \
	    /opt/cd/psf_demo > /tmp/psf
	cp /opt/cd/scripts/preinstall.unameit_demo \
	    $client_dir/lib/preinstall.client
	cp /opt/cd/scripts/preinstall.unameit_demo \
	    $server_dir/lib/preinstall.server
	cp /opt/cd/scripts/postinstall.ESMuclnt_demo \
	    $client_dir/lib/configure.client
	cp /opt/cd/scripts/postinstall.ESMusrv_demo \
	    $server_dir/lib/configure.server
	cp /opt/cd/scripts/unconfigure.client $client_dir/lib
	cp /opt/cd/scripts/unconfigure.server $server_dir/lib
        if swpackage -s /tmp/psf -d $demo_cd_dir/$os_dir \
	    -x 'write_remote_files=true' -x 'create_target_acls=false' \
	    > /dev/null; then
	    [ $leave_logs -eq 0 ] && rm -f /tmp/psf \
		$demo_cd_dir/$os_dir/swagent.log
	else
	    echo 'Creating HP-UX packages failed' 1>&2
	    [ $leave_logs -eq 0 ] && rm -f /tmp/psf \
		$demo_cd_dir/$os_dir/swagent.log
	    exit 1
	fi
	echo done.
	;;
esac

case $os_dir in
    SunOS.4* | Linux*)
        ;;
    *)
	if [ $leave_logs -eq 0 ]; then
	    echo -n "Trashing temporary copy $copy_dir..."
	    rm -rf $copy_dir
	    echo done.
	fi
	;;
esac

echo -n 'Copying documentation files...'
(cd /opt/cd;find doc -print | cpio -pdm $cd_dir) 2>/dev/null
echo done.

exit 0
